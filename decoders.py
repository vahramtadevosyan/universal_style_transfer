import torch.nn as nn 

decoder1 = nn.Sequential(
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(64, 3, (3, 3)),
)

decoder2 = nn.Sequential(
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(128, 64, (3, 3)),
	nn.ReLU(),
	nn.UpsamplingNearest2d(scale_factor=2),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(64, 64, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(64, 3, (3, 3)),
)

decoder3 = nn.Sequential(
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(256, 128, (3, 3)),
	nn.ReLU(),
	nn.UpsamplingNearest2d(scale_factor=2),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(128, 128, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(128, 64, (3, 3)),
	nn.ReLU(),
	nn.UpsamplingNearest2d(scale_factor=2),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(64, 64, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(64, 3, (3, 3)),
)

decoder4 = nn.Sequential(
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(512, 256,(3, 3)),
	nn.ReLU(),
	nn.UpsamplingNearest2d(scale_factor=2),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(256, 256, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(256, 256, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(256, 256, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(256, 128, (3, 3)),
	nn.ReLU(),
	nn.UpsamplingNearest2d(scale_factor=2),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(128, 128, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(128, 64, (3, 3)),
	nn.ReLU(),
	nn.UpsamplingNearest2d(scale_factor=2),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(64, 64, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(64, 3, (3, 3)),
)

decoder5 = nn.Sequential(
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(512, 512, (3, 3)),
	nn.ReLU(),
	nn.UpsamplingNearest2d(scale_factor=2),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(512, 512, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(512, 512, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(512, 512, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(512, 256, (3, 3)),
	nn.ReLU(),
    nn.UpsamplingNearest2d(scale_factor=2),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(256, 256, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(256, 256, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(256, 256, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(256, 128, (3, 3)),
	nn.ReLU(),
    nn.UpsamplingNearest2d(scale_factor=2),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(128, 128, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(128, 64, (3, 3)),
	nn.ReLU(),
    nn.UpsamplingNearest2d(scale_factor=2),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(64, 64, (3, 3)),
	nn.ReLU(),
	nn.ReflectionPad2d((1, 1, 1, 1)),
	nn.Conv2d(64, 3, (3, 3)),
)

decoders = [decoder1, decoder2, decoder3, decoder4, decoder5]

